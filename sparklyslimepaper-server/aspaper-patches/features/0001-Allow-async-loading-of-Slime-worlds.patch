From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jaden <madcapsnow25@gmail.com>
Date: Wed, 28 May 2025 21:29:59 -0500
Subject: [PATCH] Allow async loading of Slime worlds


diff --git a/src/main/java/com/infernalsuite/asp/AdvancedSlimePaper.java b/src/main/java/com/infernalsuite/asp/AdvancedSlimePaper.java
index 3fb8c8ca698ad73487db5b0fe40d10906e9359bd..a98b92072b1d266ac45822405a00f239d1f7f4e5 100644
--- a/src/main/java/com/infernalsuite/asp/AdvancedSlimePaper.java
+++ b/src/main/java/com/infernalsuite/asp/AdvancedSlimePaper.java
@@ -35,6 +35,7 @@ import java.util.Objects;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
+import java.util.concurrent.locks.ReentrantLock;
 
 public class AdvancedSlimePaper implements AdvancedSlimePaperAPI {
 
@@ -43,6 +44,8 @@ public class AdvancedSlimePaper implements AdvancedSlimePaperAPI {
 
     private final Map<String, SlimeWorldInstance> loadedWorlds = new ConcurrentHashMap<>();
 
+    private final ReentrantLock worldLoadLock = new ReentrantLock();
+
     static {
         System.setProperty("org.slf4j.simpleLogger.showShortLogName", "true");
     }
@@ -79,26 +82,32 @@ public class AdvancedSlimePaper implements AdvancedSlimePaperAPI {
 
     @Override
     public SlimeWorldInstance loadWorld(SlimeWorld world, boolean callWorldLoadEvent) throws IllegalArgumentException {
-        AsyncCatcher.catchOp("SWM world load");
         Objects.requireNonNull(world, "SlimeWorld cannot be null");
 
         if (Bukkit.getWorld(world.getName()) != null) {
             throw new IllegalArgumentException("World " + world.getName() + " is already loaded");
         }
 
-        LOGGER.info("Loading world {}...", world.getName());
-        long start = System.currentTimeMillis();
+        SlimeWorldInstance instance;
+        try {
+            this.worldLoadLock.lock();
+            LOGGER.info("Loading world {}...", world.getName());
+            long start = System.currentTimeMillis();
 
-        SlimeWorldInstance instance = BRIDGE_INSTANCE.loadInstance(world);
+            instance = BRIDGE_INSTANCE.loadInstance(world);
 
-        Bukkit.getPluginManager().callEvent(new LoadSlimeWorldEvent(instance));
-        if (callWorldLoadEvent) {
-            Bukkit.getPluginManager().callEvent(new WorldLoadEvent(instance.getBukkitWorld()));
-        }
+            Bukkit.getPluginManager().callEvent(new LoadSlimeWorldEvent(instance));
+            if (callWorldLoadEvent) {
+                Bukkit.getPluginManager().callEvent(new WorldLoadEvent(instance.getBukkitWorld()));
+            }
 
-        registerWorld(instance);
+            registerWorld(instance);
+
+            LOGGER.info("World {} loaded in {}ms.", world.getName(), System.currentTimeMillis() - start);
+        } finally {
+            this.worldLoadLock.unlock();
+        }
 
-        LOGGER.info("World {} loaded in {}ms.", world.getName(), System.currentTimeMillis() - start);
         return instance;
     }
 
